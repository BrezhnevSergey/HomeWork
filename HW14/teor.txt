ѕривет. Ќапомню вам jQuery методы дл€ работы с DOM



1) Ќавигаци€ и поиск

- parent(): перемещение с текущего элемента на уровень вверх (на предка)

например, если есть <div><span><b></b><span></div>, то дл€ B такое перемещение

будет указывать на SPAN, а дл€ SPAN - на DIV



- closest("селектор"): находит ближайшего предка, 
например, если есть <div class="test"><span></span><b></b></div>, то дл€ B и дл€

SPAN closest("div.test") будет указывать на div.test



- find("селектор"): делает поиск элемента по селектору, использу€ в качестве

стартовой точки место, с которого мы ищем.

Ќапример $("body").find("div") - найдет всем div внутри body



- siblings(): найдет все элементы на одном уровне с текущим элементом.

Ќапример если есть:

<div>

  <h1>test</h1>

  <span>test2</span>

  <div class="test3">test3</div>

</div>


$("h1").siblings() вернет span и div.test3, которые наход€тс€ внутри 
главного DIV



- к поиску € бы еще добавил псевдоселекторы 
(:hidden, :first, :contains('строка') )




2) манипул€ци€ DOM


- html(строка): вставл€ет строку (или html-код, если вы его указали в строке) 
внутрь элемента.

Ќапример, если есть <div></div>, то $("div").html("<b>test</b>") сделает из

div: <div><b>test</b></div>



¬Ќ»ћјЌ»≈: html() без параметров возвращает текущий html и текст элемента



- append(строка): работает почти, как html() только добавл€ет строку в конец
 элемента, 
не затира€ при этом остальные значени€



- prepend(строка): как append, только вставка в начало элемента



- attr(атрибут, значение): устанавливает/добавл€ет атрибут к текущему элементу.

если не указывать значение, вернет значение атрибута с указанным названием.

Ќапример, $("div").attr("align", "center")



- css(свойство, значение): устанавливает свойство стил€, без значени€ вернет 
значени€ свойства. 
Ќапример: $("div").css("color", "red") сделает текст во
всех div страницы красным. 
ћожно передать объект, чтобы установить несколько
свойств:

$("div").css({
  color: "red",
  border: "1px solid gray"
});



- addClass(className): добавл€ет элементу класс с именем className

- removeClass(className): то же самое, только удал€ет

- hasClass(className): проверка, есть ли у элемента класс с именем className

- toggleClass(className): замен€ет следующие строки кода:

if (element.hasClass("class)) element.removeClass("class")

else element.addClass("class") 

иными словами - добавл€ет класс, если его нет, и убирает, если он есть
